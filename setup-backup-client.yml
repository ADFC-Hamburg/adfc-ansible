- hosts: backup_clients
  roles:
  - load-contacts
  - ssh-keys
  - ubuntu-basic
  - vpnc
  tasks:

# benÃ¶tigte Programme installieren
  - name: Installiere Pakete
    apt:
      name: "{{ packages }}"
    vars:
      packages:
      - borgbackup
      - mailutils
      - monitoring-plugins-basic
      - nagios-nrpe-server
    tags: monitoring

########################### KNOCK ###########################################

  - name: "Knock: Create ssh knocking-key"
    command: ssh-keygen -t rsa -b 4096 -f /root/.ssh/knocking-key -N '' -C 'knocking key {{ ansible_host }}'
    args:
      creates: /root/.ssh/knocking-key
    tags: knock

  - name: "Knock: Get Public Key"
    slurp:
      src: /root/.ssh/knocking-key.pub
    register: knock_ssh_pub
    tags: knock

  - name: "Knock: Set Knocking key to master"
    authorized_key:
      user: root
      comment: "ADFC-Ansible Knock {{ ansible_host }}"
      key: "{{ knock_ssh_pub.content | b64decode }}"
      state: present
      key_options: "restrict,command=\"echo $SSH_CLIENT |cut -d ' '  -f1 >/var/run/client-{{ inventory_hostname }}.up\""
    delegate_to: ucs-master.gst.hamburg.adfc.de
    tags: knock

  - name: "Copy knocking script"
    copy:
      src: knock-ssh.sh
      dest: /usr/local/sbin/adfc-knock
      mode: "0755"
    tags: knock

  - name: cron erstellen
    cron:
      name: "adfc-knock"
      minute: "*"
      cron_file: adfc-knock
      user: root
      job: /usr/local/sbin/adfc-knock

############################## BackupUser ######################################
  - name: Create borgbackup user
    user:
      name: borguser
      comment: Borg Backup User
      system: yes
      password: '*'

  - name: Generate SSH Keys for borgbackup
    include_role:
      name: ssh-keys
    vars:
      authorized_key_user: borguser

  - name: Get Borgbackup key
    slurp:
       src: /root/.ssh/borgbackup-server.pub
    delegate_to: ucs-master.gst.hamburg.adfc.de
    register: borgbackupkey
    tags: borgsshauth

  - name: Create Authorized_keys for borguser append
    authorized_key:
      user: borguser
      key: "{{ borgbackupkey.content |b64decode }}"
      state: present
      key_options: "{{ krest }},{{ kcmd }},{{ kfrom }}"
    vars:
      krest: no-pty,no-agent-forwarding,no-port-forwarding,no-X11-forwarding,no-user-rc
      kcmd: 'command="borg serve --append-only --restrict-to-path /home/borguser/adfc-ucs-master/"'
      kfrom: from="192.168.123.32"
    tags: borgsshauth
  - name: Create Directory /home/borguser/adfc-ucs-master/
    file:
      path: /home/borguser/adfc-ucs-master/
      state: directory
      mode: 0700
      owner: borguser
      group: borguser

  - name: Mount Disk to /home/borguser/adfc-ucs-master/
    mount:
      path: /home/borguser/adfc-ucs-master/
      src: "{{ backup_disk_src }}"
      fstype: ext4
      state: mounted
      opts: noatime

################################ Monitoring ####################

  - name: Create Local NRPE Config
    template:
      src: nrpe_local.cfg
      dest: /etc/nagios/nrpe_local.cfg
      mode: "0644"
    tags: monitoring
    notify: Restart Nrpe

  - name: Create Command Config on ucs-master
    template:
      src: nagios-commands.cfg
      dest: /etc/nagios/conf.local.d/0_ansible-nagios-commands.cfg
      mode: "0644"
    delegate_to: ucs-master.gst.hamburg.adfc.de
    tags: monitoring
    notify: Restart Nagios Server

  - name: Create Check Cmds on ucs-master
    copy:
      src: "{{ item }}"
      dest: /usr/lib/nagios/plugins/
      mode: "0755"
    delegate_to: ucs-master.gst.hamburg.adfc.de
    with_items:
      - check_backup_cli
      - check_backup_host_alive
    tags: monitoring

  - name: Setup Check Commands
    template:
      src: nagios-backup.cfg
      dest: /etc/nagios/conf.local.d/ansible-{{ inventory_hostname }}.cfg
      mode: "0644"
    delegate_to: ucs-master.gst.hamburg.adfc.de
    tags: monitoring
    notify: Restart Nagios Server


  handlers:
  - name: Restart Nrpe
    systemd:
      name: nagios-nrpe-server
      state: restarted
  - name: Restart Nagios Server
    systemd:
       name: nagios
       state: restarted
    delegate_to: ucs-master.gst.hamburg.adfc.de
