rocketchat_test_version: 7.5.0
rocketchat_test_root_url: https://chat-test.hamburg.adfc.de
rocketchat_test_mongodb_version: 6.0

rocketchat_live_version: 7.5.1
rocketchat_live_root_url: https://chat.hamburg.adfc.de
rocketchat_live_mongodb_version: 7.0

docker_compose_project_rocketchat_test:
  nodes:
    - tools2.hamburg.adfc.de
  domains:
    - chat-test.hamburg.adfc.de
  internal_port: 3005
  hetzner_volumes:
    - name: chat_mongodb_test
      size_gb: 15
      location: nbg1
      mount: /var/lib/docker/volumes/docker-rocketchat_test_mongodb_data
  backup_on_new_version:
    - src: /var/lib/docker/volumes/docker-rocketchat_test_mongodb_data
      hcloud_volume_prefix: backup_chat_mongodb_test
      hcloud_size_gb: 15
      hcloud_location: nbg1
  compose_block:
    # From https://raw.githubusercontent.com/RocketChat/Docker.Official.Image/master/compose.yml
    # Version: 63a01a43be966e79a66ce38ad2f1249245deb4cd
    volumes:
      mongodb_data:
        driver: local
    services:
      rocketchat:
        image: registry.rocket.chat/rocketchat/rocket.chat:{{ rocketchat_test_version }}
        restart: unless-stopped
        environment:
          MONGO_URL: "mongodb://mongodb:27017/rocketchat?replicaSet=rs0"
          MONGO_OPLOG_URL: "mongodb://mongodb:27017/local?replicaSet=rs0"
          ROOT_URL: "{{ rocketchat_test_root_url }}"
          PORT: 3005
          DEPLOY_METHOD: docker
          DEPLOY_PLATFORM: ""
        depends_on:
          - mongodb
        expose:
          - 3005
        ports:
          - "{{ adfc_internal_ip}}:3005:3005"
      mongodb:
        image: docker.io/bitnami/mongodb:{{ rocketchat_test_mongodb_version }}
        restart: unless-stopped
        volumes:
          - mongodb_data:/bitnami/mongodb
        environment:
          MONGODB_REPLICA_SET_MODE: primary
          MONGODB_REPLICA_SET_NAME: rs0
          MONGODB_PORT_NUMBER: 27017
          MONGODB_INITIAL_PRIMARY_HOST: mongodb
          MONGODB_INITIAL_PRIMARY_PORT_NUMBER: 27017
          MONGODB_ADVERTISED_HOSTNAME: mongodb
          MONGODB_ENABLE_JOURNAL: true
          ALLOW_EMPTY_PASSWORD: yes

docker_compose_project_rocket:
  nodes:
    - tools1.hamburg.adfc.de
  domains:
    - chat.hamburg.adfc.de
  internal_port: 3000
  hetzner_volumes:
    - name: chat-mongo
      size_gb: 30
      location: nbg1
      mount: /var/lib/docker/volumes/docker-rocket_mongodb_data
    - name: chat-upload
      size_gb: 20
      location: nbg1
      mount: /var/lib/docker/volumes/docker-rocket_rocket_uploads
  backup_on_new_version:
    - src: /var/lib/docker/volumes/docker-rocket_mongodb_data
      hcloud_volume_prefix: backup_chat_mongo
      hcloud_size_gb: 20
      hcloud_location: nbg1
  compose_block:
    # From https://raw.githubusercontent.com/RocketChat/Docker.Official.Image/master/compose.yml
    # Version: 63a01a43be966e79a66ce38ad2f1249245deb4cd
    volumes:
      mongodb_data:
        driver: local
      rocket_uploads:
        driver: local
    services:
      rocketchat:
        image: registry.rocket.chat/rocketchat/rocket.chat:{{ rocketchat_live_version }}
        restart: unless-stopped
        environment:
          MONGO_URL: "mongodb://mongodb:27017/rocketchat?replicaSet=rs0"
          MONGO_OPLOG_URL: "mongodb://mongodb:27017/local?replicaSet=rs0"
          ROOT_URL: "{{ rocketchat_live_root_url }}"
          PORT: 3000
          DEPLOY_METHOD: docker
          DEPLOY_PLATFORM: ""
        depends_on:
          - mongodb
        expose:
          - 3000
        ports:
          - "{{ adfc_internal_ip}}:3000:3000"
        volumes:
        - rocket_uploads:/app/uploads
      mongodb:
        image: docker.io/bitnami/mongodb:{{ rocketchat_live_mongodb_version }}
        restart: unless-stopped
        volumes:
          - mongodb_data:/bitnami/mongodb
        environment:
          MONGODB_REPLICA_SET_MODE: primary
          MONGODB_REPLICA_SET_NAME: rs0
          MONGODB_PORT_NUMBER: 27017
          MONGODB_INITIAL_PRIMARY_HOST: mongodb
          MONGODB_INITIAL_PRIMARY_PORT_NUMBER: 27017
          MONGODB_ADVERTISED_HOSTNAME: mongodb
          MONGODB_ENABLE_JOURNAL: true
          ALLOW_EMPTY_PASSWORD: yes
        # Wenn man von au√üen zugreifen will:
        # ports:
        # - 127.0.0.1:27017:27017
        deploy:
          resources:
            limits:
              cpus: '1.8'
