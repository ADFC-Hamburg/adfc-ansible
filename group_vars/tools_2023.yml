docker_compose_project_codierung:
  nodes:
    - tools1.hamburg.adfc.de
    - tools2.hamburg.adfc.de
  domains:
    - codierung.hamburg.adfc.de
  internal_port: 3300
  compose_block:
    version: "3"
    services:
      web:
        image: ghcr.io/adfc-hamburg/codierung
        restart: unless-stopped
        ports:
          - "{{ adfc_internal_ip }}:3300:80"
        labels:
          - "com.centurylinklabs.watchtower.scope=codierung"
      watchtower:
        image: containrrr/watchtower
        volumes:
          - /root/.docker/config.json:/config.json:ro
          - /var/run/docker.sock:/var/run/docker.sock:ro
        # pruefe alle 20 Minuten = 1200 Sec auf update
        command: --interval 1200 --debug --scope=codierung docker-codierung-web-1
        labels:
          - "com.centurylinklabs.watchtower.scope=codierung"

docker_compose_project_meet_redirect:
  nodes:
    - tools1.hamburg.adfc.de
    - tools2.hamburg.adfc.de
  domains:
    - meet.adfc-intern.de
  internal_port: 3100
  compose_block:
    version: "3"
    services:
      web:
        image: ghcr.io/adfc-hamburg/https_meet_redirect
        restart: unless-stopped
        ports:
          - "{{ adfc_internal_ip }}:3100:80"

docker_compose_project_t30_gone:
  nodes:
    - tools1.hamburg.adfc.de
    - tools2.hamburg.adfc.de
  domains:
    - t30forderung.hamburg.adfc.de
    - t30antrag.hamburg.adfc.de
  internal_port: 3200
  compose_block:
    version: "3"
    services:
      web:
        image: ghcr.io/adfc-hamburg/https_t30_gone
        restart: unless-stopped
        ports:
          - "{{ adfc_internal_ip }}:3200:80"
rocketchat_test_version: 6.4.6
rocketchat_test_root_url: https://chat-test-hamburg.adfc.de
rocketchat_test_mongodb_version: 5.0

rocketchat_live_version: 6.4.6
rocketchat_live_root_url: https://chat.hamburg.adfc.de
rocketchat_live_mongodb_version: 5.0

docker_compose_project_rocketchat_test:
  nodes:
    - tools2.hamburg.adfc.de
  domains:
    - chat-test.hamburg.adfc.de
  internal_port: 3005
  hetzner_volumes:
    - name: chat_mongodb_test
      size_gb: 15
      location: nbg1
      mount: /var/lib/docker/volumes/docker-rocketchat_test_mongodb_data
  backup_on_new_version:
    - src: /var/lib/docker/volumes/docker-rocketchat_test_mongodb_data
      hcloud_volume_prefix: backup_chat_mongodb_test
      hcloud_size_gb: 15
      hcloud_location: nbg1
  compose_block:
    version: "3"
    # From https://raw.githubusercontent.com/RocketChat/Docker.Official.Image/master/compose.yml
    # Version: 63a01a43be966e79a66ce38ad2f1249245deb4cd
    volumes:
      mongodb_data:
        driver: local
    services:
      rocketchat:
        image: registry.rocket.chat/rocketchat/rocket.chat:{{ rocketchat_test_version }}
        restart: unless-stopped
        environment:
          MONGO_URL: "mongodb://mongodb:27017/rocketchat?replicaSet=rs0"
          MONGO_OPLOG_URL: "mongodb://mongodb:27017/local?replicaSet=rs0"
          ROOT_URL: "{{ rocketchat_test_root_url }}"
          PORT: 3005
          DEPLOY_METHOD: docker
          DEPLOY_PLATFORM: ""
        depends_on:
          - mongodb
        expose:
          - 3005
        ports:
          - "{{ adfc_internal_ip}}:3005:3005"
      mongodb:
        image: docker.io/bitnami/mongodb:{{ rocketchat_test_mongodb_version }}
        restart: unless-stopped
        volumes:
          - mongodb_data:/bitnami/mongodb
        environment:
          MONGODB_REPLICA_SET_MODE: primary
          MONGODB_REPLICA_SET_NAME: rs0
          MONGODB_PORT_NUMBER: 27017
          MONGODB_INITIAL_PRIMARY_HOST: mongodb
          MONGODB_INITIAL_PRIMARY_PORT_NUMBER: 27017
          MONGODB_ADVERTISED_HOSTNAME: mongodb
          MONGODB_ENABLE_JOURNAL: true
          ALLOW_EMPTY_PASSWORD: yes

docker_compose_project_quartiere:
  nodes:
    - tools2.hamburg.adfc.de
  domains:
    - quartierefuermenschen.adfc-hamburg.de
    - quartierefuermenschen.de
    - www.quartierefuermenschen.de
    - xn--quartierefrmenschen-fbc.de
    - www.xn--quartierefrmenschen-fbc.de
  internal_port: 3400
  hetzner_volumes:
    - name: quartiere-mariadb
      size_gb: 10
      location: nbg1
      mount: /var/lib/docker/volumes/docker-quartiere_mariadb
    - name: quartiere-wordpress
      size_gb: 10
      location: nbg1
      mount: /var/lib/docker/volumes/docker-quartiere_wordpress
  compose_block:
    version: "3.1"
    volumes:
      mariadb:
        driver: local
      wordpress:
        driver: local
    services:
      mariadb:
        image: mariadb:11.1
        restart: unless-stopped
        volumes:
          - mariadb:/var/lib/mysql
        environment:
          MARIADB_DATABASE: wordpress
          MARIADB_USER: wordpress
          MARIADB_PASSWORD_FILE: /run/secrets/db_password
          MARIADB_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
          MARIADB_AUTO_UPGRADE: "1"
          MARIADB_DISABLE_UPGRADE_BACKUP: "0"
          MYSQL_RANDOM_ROOT_PASSWORD: "1"
        secrets:
         - db_root_password
         - db_password
      wordpress:
        image: wordpress:6.3.2-php8.0
        restart: unless-stopped
        volumes:
          - wordpress:/var/www/html
        depends_on:
          - mariadb
        environment:
          WORDPRESS_DB_HOST: mariadb
          WORDPRESS_DB_USER: wordpress
          WORDPRESS_DB_NAME: wordpress
          WORDPRESS_DB_PASSWORD_FILE: /run/secrets/db_password
        secrets:
          - db_password
        ports:
          - "{{ adfc_internal_ip}}:3400:80"
    secrets:
      db_password:
        file: db_password.txt
      db_root_password:
        file: db_root_password.txt

docker_compose_project_api:
  nodes:
    - tools1.hamburg.adfc.de
    - tools2.hamburg.adfc.de
  domains:
    - api.hamburg.adfc.de
  internal_port: 3500
  compose_block:
    version: "3"
    volumes:
      api_data:
        driver: local
    services:
      api:
        image: nginx:mainline-alpine-slim
        restart: unless-stopped
        ports:
          - "{{ adfc_internal_ip}}:3500:80"
        volumes:
          - api_data:/usr/share/nginx/html:ro
        labels:
          - "com.centurylinklabs.watchtower.scope=api"
      adfc_tour_to_vadb:
        image: ghcr.io/adfc-hamburg/adfc-tour_to_vadb:main
        restart: unless-stopped
        volumes:
          - api_data:/srv/metroterm/out
        labels:
          - "com.centurylinklabs.watchtower.scope=api"
      watchtower:
        image: containrrr/watchtower
        volumes:
          - /root/.docker/config.json:/config.json:ro
          - /var/run/docker.sock:/var/run/docker.sock:ro
        # pruefe alle 12h = 43200  1200 Sec auf update
        command: --interval 43200 --debug --scope=api docker-api-api-1 docker-api-adfc_tour_to_vadb-1
        labels:
          - "com.centurylinklabs.watchtower.scope=api"

docker_compose_project_rocket:
  nodes:
    - tools1.hamburg.adfc.de
  domains:
    - chat.hamburg.adfc.de
  internal_port: 3000
  hetzner_volumes:
    - name: chat-mongo
      size_gb: 20
      location: nbg1
      mount: /var/lib/docker/volumes/docker-rocket_mongodb_data
  backup_on_new_version:
    - src: /var/lib/docker/volumes/docker-rocket_mongodb_data
      hcloud_volume_prefix: backup_chat_mongo
      hcloud_size_gb: 20
      hcloud_location: nbg1
  compose_block:
    version: "3"
    # From https://raw.githubusercontent.com/RocketChat/Docker.Official.Image/master/compose.yml
    # Version: 63a01a43be966e79a66ce38ad2f1249245deb4cd
    volumes:
      mongodb_data:
        driver: local
    services:
      rocketchat:
        image: registry.rocket.chat/rocketchat/rocket.chat:{{ rocketchat_live_version }}
        restart: unless-stopped
        environment:
          MONGO_URL: "mongodb://mongodb:27017/rocketchat?replicaSet=rs0"
          MONGO_OPLOG_URL: "mongodb://mongodb:27017/local?replicaSet=rs0"
          ROOT_URL: "{{ rocketchat_live_root_url }}"
          PORT: 3000
          DEPLOY_METHOD: docker
          DEPLOY_PLATFORM: ""
        depends_on:
          - mongodb
        expose:
          - 3000
        ports:
          - "{{ adfc_internal_ip}}:3000:3000"
      mongodb:
        image: docker.io/bitnami/mongodb:{{ rocketchat_live_mongodb_version }}
        restart: unless-stopped
        volumes:
          - mongodb_data:/bitnami/mongodb
        environment:
          MONGODB_REPLICA_SET_MODE: primary
          MONGODB_REPLICA_SET_NAME: rs0
          MONGODB_PORT_NUMBER: 27017
          MONGODB_INITIAL_PRIMARY_HOST: mongodb
          MONGODB_INITIAL_PRIMARY_PORT_NUMBER: 27017
          MONGODB_ADVERTISED_HOSTNAME: mongodb
          MONGODB_ENABLE_JOURNAL: true
          ALLOW_EMPTY_PASSWORD: yes

adfc_borg_repo: /adfc-backup/chat.hamburg.adfc.de
borg_create_pre_job: >-
  docker exec docker-rocket-mongodb-1 sh -c 'mongodump --archive'  >
  /usr/local/share/rocketchat/mongodump 2>/usr/local/share/rocketchat/mongodump.log
borg_save_path: "/usr/local/share/rocketchat /etc"
borg_save_exclude_dirs:
  - /tmp
borg_cron_hour: "2,14"
borg_client_user: "borgchat"
