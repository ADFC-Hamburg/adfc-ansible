
- name: Install base apt packages.
  apt:
    name: "{{ jitsi_meet_base_packages }}"
    state: present
    update_cache: yes
    cache_valid_time: 3600

- name: Determine repo strategy.
  set_fact:
    jitsi_strategy: "{{ 'unstable' if jitsi_meet_use_nightly_apt_repo else 'stable' }}"

# Both stable and unstable repos use the same signing key.
- name: Configure signing key for Jitsi repository.
  apt_key:
    id: "{{ jitsi_meet_apt_key_id }}"
    url: "{{ jitsi_meet_apt_key_url }}"
    state: present

- name: Install Jitsi apt repo.
  apt_repository:
    repo: "{{ item.value.repo_url }}"
    state: "{{ 'present' if jitsi_strategy == item.key else 'absent' }}"
    # Ansible will automatically add the ".list" suffix.
    filename: /etc/apt/sources.list.d/jitsi_meet
    update_cache: yes
  with_dict: "{{ jitsi_meet_apt_repos }}"

- name: Install Debian Pakackage
  apt:
    name:
      - jitsi-videobridge

- name: stat password file
  stat:
    path: "{{ jitsi_meet_vb_password_file }}"
  register: vb_passwd_file_stat

- name: Generate Jvb Password if not set
  copy:
    content: "{{  lookup('password', '/dev/null length=16 chars=ascii_letters,digits') }}"
    dest: "{{ jitsi_meet_vb_password_file }}"
    mode: 0600
  when: not vb_passwd_file_stat.stat.exists

- name: Read Jvb Password
  slurp:
    src: "{{ jitsi_meet_vb_password_file }}"
  register: vb_password_file_slurp

- name: Create config
  template:
    src: vb-config.j2
    dest: /etc/jitsi/videobridge/config
    owner: root
    group: root
    mode: "0644"
  vars:
    jitsi_meet_jvb_cfg_password: "{{ vb_password_file_slurp.content | b64decode }}"
  notify: restart jitsi-videobridge


- name: Create sip-communicator.properties config
  template:
    src: sip-communicator.properties.j2
    dest: /etc/jitsi/videobridge/sip-communicator.properties
    owner: root
    group: root
    mode: "0644"
  vars:
    jitsi_meet_jvb_cfg_password: "{{ vb_password_file_slurp.content | b64decode }}"
  notify: restart jitsi-videobridge

- name: Setup jitsi main server firewall for ipv6
  ufw:
    rule: allow
    port: "{{ jitsi_meet_jvb_cfg_port |string }}"
    from: "{{ ansible_default_ipv6.address }}"
    proto: tcp
  delegate_to: "{{ jitsi_meet_server }}"
- name: Setup jitsi main server firewall for ipv4
  ufw:
    rule: allow
    port: "{{ jitsi_meet_jvb_cfg_port | string }}"
    from: "{{ ansible_default_ipv4.address }}"
    proto: tcp
  delegate_to: "{{ jitsi_meet_server }}"
