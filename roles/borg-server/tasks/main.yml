# Borg ist im Moment haendisch unt
- name: Installiere pakete
  apt:
    name:
      - python3-pip
      - python3-venv
      - cython3
      - libacl1-dev
      - libssl-dev
  tags: borg-server

- name: Install virtualenv via pip
  pip:
    name: virtualenv
    executable: pip3

- name: Install borg
  pip:
    name:
      - wheel
      - cython
      - borgbackup==1.1.15
    virtualenv: /usr/local/share/borg-venv
  vars:
    ansible_python_interpreter: /usr/bin/python3
  tags: borg-server

- name: Sysmlink borg executable
  file:
    src: "/usr/local/share/borg-venv/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    state: link
  with_items:
    - borg
    - borgfs
  tags: borg-server

- name: Create Borgbackup Server Key
  command: ssh-keygen -t rsa -b 4096 -f /root/.ssh/borgbackup-server -N '' -C 'borgbackup-server-key adfc gst'
  args:
    creates: /root/.ssh/borgbackup-server
  tags: borg-server

- name: install borg-script
  template:
    src: adfc-borg
    dest: /usr/local/sbin/adfc-borg
    mode: "0755"
  tags: borg-server,adfc-borg

- name: Keyscan of clients
  command:
    argv:
      - ssh-keyscan
      - localhost
  delegate_to: "{{ item }}"
  changed_when: false
  loop: "{{ groups['backup_clients'] }}"
  register: backup_clients_keyscan
  tags: borg-server,adfc-borg,borg-keyscan

- name: Create dir
  file:
    path: /usr/local/share/adfc-borg
    state: directory
    mode: 0755
    owner: root
    group: root

- name: Output Keyscan
  copy:
    content: |
      {% for res in backup_clients_keyscan.results %}
      {% for line in res.stdout_lines |sort %}
      {{ res.item }}{{ line |regex_replace('^localhost','') }}
      {% endfor %}
      {% endfor %}
    dest: /usr/local/share/adfc-borg/known_hosts
    mode: 0644
    owner: root
    group: root
  tags: borg-server,adfc-borg,borg-keyscan

- name: install ssh-config
  template:
    src: ssh-config
    dest: /usr/local/share/adfc-borg/ssh-config
    mode: "0644"
  tags: borg-server,adfc-borg

- name: Setup Cronjob
  cron:
    name: adfc-borg
    minute: "{{ borg_cron_minute }}"
    hour: "{{ borg_cron_hour }}"
    user: root
    job: /usr/local/sbin/adfc-borg cron >/dev/null
    cron_file: ansible_adfc-borg
  tags: borg-server

- name: install logrotate script
  template:
    src: logrotate
    dest: /etc/logrotate.d/adfc-borg
    mode: "0644"
  tags: borg-server

- name: Get Borgbackup key
  slurp:
      src: /root/.ssh/borgbackup-server.pub
  register: borgbackupkey
  tags:
    - borg-server
    - adfc-borg
    - backup_client

- name: Setup Backup client
  include_tasks: setup_client.yml
  loop: "{{ groups['backup_clients'] }}"
  loop_control:
    loop_var: backup_client
  tags:
    - borg-server
    - adfc-borg
    - backup_client