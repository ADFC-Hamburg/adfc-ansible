#!/bin/bash
# {{ ansible_managed }}
TMPFILE=$(/usr/bin/mktemp  -t)
ALLOKAY=1
ALLGLEICH=1
fetch_key() {
    TARGET_HOST=$1
    BHOST=$2
    # zur sicherheit Tempfile leeren
    echo '' > ${TMPFILE}
    OK="0"
    SSH_AUTH_SOCK="" ssh -o "RequestTTY=no" -i /usr/local/share/harpoxy-key-copy/ssh-key root@${TARGET_HOST} > ${TMPFILE}
    grep 'PRIVATE KEY' ${TMPFILE} >/dev/null && OK="1"
    if [ "$OK" == 1 ] ; then
        diff ${TMPFILE} /etc/haproxy/certs/${BHOST}.pem >/dev/null 2>&1 && GLEICH="1"
        if [ "$GLEICH" = "0" ]; then
            ALLGLEICH=0
        fi
        # Auch kopieren wenn gleich dadurch Zeitstempel neu brauchen wir unten
        cp ${TMPFILE} /etc/haproxy/certs/${BHOST}.pem
    else
        # Abholen nicht erfolgreich z.B. Host down
        ALLOKAY=0
    fi
}
{% for ha_backend_host in groups[haproxy_backend_group] %}
{% if hostvars[ha_backend_host]['haproxy_cert_and_key_files'] | default([]) |length >0 %}
fetch_key "{{ hostvars[ha_backend_host]['ansible_host'] }}" {{ ha_backend_host }}
{% endif %}
{% endfor %}
rm $TMPFILE
if [ "$ALLGLEICH" = "0" ] ; then
    # Irgend ein PEM File hat sich geaendert Restarte Haproxy
    systemctl restart haproxy.service
fi
if [ "$ALLOKAY" = "1" ] ; then
    # wenn alles okay ist loesche Dateien die aelter als 20 Minuten sind, weil sie nicht
    # von diesen durchlauf entstanden sind
    find  /etc/haproxy/certs/ -type f -cmin +20 -delete
fi