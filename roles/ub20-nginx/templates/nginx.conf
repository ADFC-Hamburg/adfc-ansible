user   {{nginx_user}} {{nginx_group}};
worker_processes  {{ nginx_worker_processes}};
worker_rlimit_nofile 8192;

pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections {{ nginx_worker_connections}} ;
    ## Accept as many connections as possible.
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;


    ## Default log and error files.
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    set_real_ip_from {{  nginx_set_real_ip_from  }};
    real_ip_header {{  nginx_real_ip_header  }};
    server_names_hash_bucket_size {{ nginx_server_names_hash_bucket_size }};

    sendfile        on;

    ## Timeouts.
    client_body_timeout 60;
    client_header_timeout 60;
    keepalive_timeout 10 10;
    send_timeout 60;
    proxy_connect_timeout 300;


    ## Reset lingering timed out connections. Deflect DDoS.
    reset_timedout_connection on;

    ## Body size.
    client_max_body_size {{ nginx_client_max_body_size }};

    ## TCP options.
    tcp_nodelay on;
    ## Optimization of socket handling when using sendfile.
    tcp_nopush on;

    ## Compression.
    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 1;
    gzip_http_version 1.1;
    gzip_min_length 10;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/x-icon application/vnd.ms-fontobject font/opentype application/x-font-ttf image/svg+xml;
    gzip_vary on;
    gzip_proxied any; # Compression for all requests.
    ## No need for regexps. See
    ## http://wiki.nginx.org/NginxHttpGzipModule#gzip_disable
    gzip_disable msie6;



    ## Hide the Nginx version number.
    server_tokens off;


    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  10m;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+AESGCM:EDH+AESGCM;


    ssl_session_tickets off; # Requires nginx >= 1.5.9
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7

    ssl_prefer_server_ciphers   on;
    ssl_dhparam /etc/nginx/dhparams.pem;

    ## Fill in with your own resolver.
    #resolver 8.8.8.8;

    ## Cache open FD
#    open_file_cache max=10000 inactive=3600s;
#    open_file_cache_valid 7200s;
#    open_file_cache_min_uses 2;

    # Bot/Crawler flood protectin
    map $http_user_agent $is_non_search_bot {
        default '';
        ~*(google|bing|Zend_Http_Client|check_http|Twitter|facebook|LinkedInBot|"end\x5CHttp\x5CClient) '';
        ~*(http|crawler|spider|bot|search|ForusP|Wget/|Python-urllib|PHPCrawl|bGenius|MJ12|Screaming|Uptime|Java|OnPageBot|Pingdom) 'bot';
    }

    # Rate limit bots (that are not search spiders) to one PHP request per second.
    # An empty '$limit_bots' would disable rate limiting for this requests
    limit_req_zone $is_non_search_bot zone=bots:1m rate=20r/m;
    limit_req_log_level error;
    limit_req_status 429;

    ## Uncomment to increase map_hash_bucket_size. If start getting
    ## [emerg]: could not build the map_hash, you should increase
    ## map_hash_bucket_size: 64 in your
    ## logs. Cf. http://wiki.nginx.org/NginxOptimizations.
    #map_hash_bucket_size 192;

    ## Uncomment one of the lines below if you start getting this message:
    ## "[emerg] could not build the variables_hash, you should increase
    ## either variables_hash_max_size: 512 or variables_hash_bucket_size: 64"
    ## You only need to increase one. Increasing variables_hash_max_size to 1024
    ## was recommended in nginx forum by developers.
    ## See this forum topic and responses
    ## http://forum.nginx.org/read.php?2,192277,192286#msg-192286
    ## See http://wiki.nginx.org/HttpCoreModule#variables_hash_bucket_size
    ## The line variables_hash_bucket_size was added for completeness but not
    ## changed from default.
    #variables_hash_max_size 1024; # default 512
    #variables_hash_bucket_size 64; # default is 64

    ## Enable the builtin cross-site scripting (XSS) filter available
    ## in modern browsers.  Usually enabled by default we just
    ## reinstate in case it has been somehow disabled for this
    ## particular server instance.
    ## https://www.owasp.org/index.php/List_of_useful_HTTP_headers.
    add_header X-XSS-Protection '1; mode=block';

    ## Enable clickjacking protection in modern browsers. Available in
    ## IE8 also. See
    ## https://developer.mozilla.org/en/The_X-FRAME-OPTIONS_response_header
    ## This may conflicts with pseudo streaming (at least with Nginx version 1.0.12).
    ## Uncomment the line below if you're not using media streaming.
    ## For sites being framing on the same domqin uncomment the line below.
    #add_header X-Frame-Options SAMEORIGIN;
    ## For sites accepting to be framed in any context comment the
    ## line below.
    #add_header X-Frame-Options DENY;

    ## Enable this if using HTTPS. See sites-available/example.com.conf
    ## for details.
    #add_header Strict-Transport-Security "max-age=7200";

    ## Block MIME type sniffing on IE.
    add_header X-Content-Options nosniff;

    ## Add a cache miss/hit status header. This can be disabled if not including
    ## any of the apps/drupal/microcache* files.
    add_header X-Micro-Cache $upstream_cache_status;

    ## FastCGI.
    include /etc/nginx/fastcgi.conf;


    ## Include the map to block HTTP methods.
    include map_block_http_methods.conf;

    ## Support the X-Forwarded-Proto header for fastcgi.
    map $http_x_forwarded_proto $fastcgi_https {
        default $https;
        http '';
        https on;
    }

    ## Include the Nginx stub status allowed hosts configuration block.
    include nginx_status_allowed_hosts.conf;

    ## Include blacklist for bad bot and referer blocking.
    include blacklist.conf;

    ## Include all global configuration added by later ansible roles
    #include /etc/nginx/includes/*.conf;
    include /etc/nginx/conf.d/*.conf;
    include fastcgi_microcache_zone.conf;
    include /etc/nginx/sites-enabled/*.conf;

}
