- name: Import InfluxDB GPG signing key with apt_key
  ansible.builtin.apt_key:
    url: "{{ influx_repo_gpg_key_url }}"
    state: present
  when: ansible_distribution_release != 'bullseye'

- name: Import Influxdb GPG siging key with store
  ansible.builtin.get_url:
    url: "{{ influx_repo_gpg_key_url }}"
    dest: /etc/apt/trusted.gpg.d/influxdb.key
    checksum: "sha256:{{ influx_repo_gpg_key_sha256 }}"
  when: ansible_distribution_release == 'bullseye'

- name: Convert key on 'bullseye'
  ansible.builtin.command:
    argv:
      - gpg
      - --dearmor
      - /etc/apt/trusted.gpg.d/influxdb.key
    creates: /etc/apt/trusted.gpg.d/influxdb.key.gpg
  when: ansible_distribution_release == 'bullseye'

- name: Add InfluxDB repository
  ansible.builtin.apt_repository:
    repo: "deb {{ infulx_repo_url }} {{ ansible_distribution_release }} stable"
    state: present

- name: Install Telegraf packages
  ansible.builtin.apt:
    name:
      - telegraf

- name: Read Password
  ansible.builtin.slurp:
    src: "{{ influx_admin_password_file }}"
  register: influx_password_file_slurp
  delegate_to: "{{ influxdb_host }}"

- name: Disable defautl output.influxdb entry in /etc/telegraf.conf
  ansible.builtin.lineinfile:
    path: /etc/telegraf/telegraf.conf
    regexp: '^.*\[\[outputs.influxdb\]\]'
    line: "# [[outputs.influxdb]]"
  notify: restart telegraf

- name: Create output info
  ansible.builtin.template:
    src: output-influx.conf.j2
    dest: /etc/telegraf/telegraf.d/output-influx.conf
    mode: "0644"
    owner: "root"
    group: "root"
  vars:
    influxdb_password: "{{ influx_password_file_slurp.content | b64decode }}"
  notify: restart telegraf

- name: Create network stat
  ansible.builtin.template:
    src: inputs-net.conf.j2
    dest: /etc/telegraf/telegraf.d/inputs-net.conf
    mode: "0644"
    owner: "root"
    group: "root"
  when: telegraf_net
  notify: restart telegraf

- name: Remove jtisi stat
  ansible.builtin.file:
    path: /etc/telegraf/telegraf.d/inputs-net.conf
    state: absent
  when: not telegraf_net

- name: Create jitsi stat
  ansible.builtin.template:
    src: input-jitsi-stats.conf.j2
    dest: /etc/telegraf/telegraf.d/input-jitsi-stats.conf
    mode: "0644"
    owner: "root"
    group: "root"
  when: telegraf_jitsi
  notify: restart telegraf

- name: Remove jtisi stat
  ansible.builtin.file:
    path: /etc/telegraf/telegraf.d/input-jitsi-stats.conf
    state: absent
  when: not telegraf_jitsi
  notify: restart telegraf

- name: Reset systemd
  ansible.builtin.command: # noqa command-instead-of-module
    argv:
      - systemctl
      - reset-failed
      - telegraf
