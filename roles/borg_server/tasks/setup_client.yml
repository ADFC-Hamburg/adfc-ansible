---
- name: Create borgbackup user
  ansible.builtin.user:
    name: "{{ borg_client_user }}"
    comment: Borg Backup User for {{ inventory_hostname_short }}
    system: true
    password: "*"
  delegate_to: "{{ backup_client }}"
  tags:
    - borg-server
    - adfc-borg
    - backup_client

- name: Create Authorized_keys for borguser append
  ansible.posix.authorized_key:
    user: "{{ borg_client_user }}"
    key: "{{ borgbackupkey.content | b64decode }}"
    state: present
    key_options: "{{ key_options | join(',') }}"
  delegate_to: "{{ backup_client }}"
  vars:
    key_options:
      - no-pty
      - no-agent-forwarding
      - no-port-forwarding
      - no-X11-forwarding
      - no-user-rc
      - command="borg serve --append-only --restrict-to-path {{ adfc_borg_repo }}"
      - from="{{ public_ipv4 }}"
  tags:
    - borg-server
    - adfc-borg
    - backup_client

- name: Create adfc_borg_repo
  ansible.builtin.file:
    path: "{{ adfc_borg_repo }}"
    state: directory
    mode: "0700"
    owner: "{{ borg_client_user }}"
  delegate_to: "{{ backup_client }}"

- name: Generate SSH Keys for borgbackup
  ansible.builtin.include_role:
    name: ssh_keys
  vars:
    authorized_key_user: "{{ borg_client_user }}"
    authorized_key_delegate: "{{ backup_client }}"

- name: Check if Borg Repo is initialized,
  ansible.builtin.stat:
    path: "{{ adfc_borg_repo }}/config"
  register: borg_config
  delegate_to: "{{ backup_client }}"

- name: Initialize Repo
  ansible.builtin.fail:
    msg: "Bitte Repo initalisieren mit: /usr/local/sbin/adfc-borg init {{ backup_client }}"
  when: not borg_config.stat.exists
