---
- name: Check ob Client eingeschaltet
  wait_for_connection:
    timeout: 10
  register: connect_result
  ignore_errors: true

- name: Angemeldete User ueberpruefen
  command: who
  register: who_var
  changed_when: false
  when:
    - connect_result is not failed

- name: Den Output parsen
  set_fact:
    users: '{{ who_var.stdout_lines | reject("match", "^root ") | list }}'
  when:
    - connect_result is not failed

- name: Die angemeldeten Nutzer melden
  debug:
    var: users
  when:
    - connect_result is not failed
    - (users is defined) and (users | length > 0)

- name: Pr√ºfen ob die Steckdose eingeschaltet ist
  delegate_to: ucs-master.gst.hamburg.adfc.de
  uri:
    url: http://{{ tasmota_wireless_ip }}/cm?cmnd=Power
  register: tasmota_state
  when:
    - connect_result is failed
    - command == "poweron"

- name: Steckdose ausschalten
  delegate_to: ucs-master.gst.hamburg.adfc.de
  uri:
    url: http://{{ tasmota_wireless_ip }}/cm?cmnd=Power+OFF
  when:
    - connect_result is failed
    - command == "poweron"
    - tasmota_state.json.POWER == "ON"

- name: Warten bis Reststrom verbraucht
  pause:
    seconds: 60
  when:
    - connect_result is failed
    - command == "poweron"
    - tasmota_state.json.POWER == "ON"

- name: Einschalten
  delegate_to: ucs-master.gst.hamburg.adfc.de
  uri:
    url: http://{{ tasmota_wireless_ip }}/cm?cmnd=Power+ON
  when:
    - connect_result is failed
    - command == "poweron"

- name: Warten bis Rechner gestartet ist
  wait_for_connection:
    sleep: 10
    timeout: 120
  register: after_start_connect_result
  when:
    - connect_result is failed
    - command == "poweron"

- name: Fakten einlesen
  setup:
  when:
    - connect_result is not failed or (after_start_connect_result is not failed and after_start_connect_result is not skipped)

- name: Ausschalten
  command: shutdown -h now
  async: 1
  poll: 0
  ignore_errors: true
  changed_when: false
  when:
    - connect_result is not failed
    - command == "poweroff"
    - (users is defined) and (users | length == 0)


- name: Warten auf ausgeschaltet
  delegate_to: localhost
  wait_for: host={{ ansible_host }} port=22 state=stopped
  when:
    - connect_result is not failed
    - command == "poweroff"
    - (users is defined) and (users | length == 0)

- name: Warte bis richtig heruntergefahren
  pause:
    seconds: 30
  when:
    - connect_result is failed or command == "poweroff"
    - command != "poweron" and command != "status"
    - (users is defined) and (users | length == 0)

- name: Steckdose ausschalten
  delegate_to: ucs-master.gst.hamburg.adfc.de
  uri:
    url: http://{{ tasmota_wireless_ip }}/cm?cmnd=Power+OFF
  when:
    - connect_result is failed or command == "poweroff"
    - command != "poweron" and command != "status"
    - (users is defined) and (users | length == 0)
