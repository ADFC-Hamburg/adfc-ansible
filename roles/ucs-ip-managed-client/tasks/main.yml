---
- name: Check if password file is there
  ansible.builtin.stat:
    path: /etc/machine.secret
  register: machine_secret_stat

- name: Create Password file if empty
  ansible.builtin.copy:
    content: "{{ lookup('password', '/dev/null length=16') }}"
    dest: /etc/machine.secret
    mode: "0600"
    owner: root
  when: not machine_secret_stat.stat.exists

- name: Read machine secret
  ansible.builtin.slurp:
    path: /etc/machine.secret
  register: machine_secret

- name: Check if object exists
  ansible.builtin.command: univention-ldapsearch -LLLLL -b {{ ucs_computer_position }} cn={{ inventory_hostname.split('.')[0] | lower }} dn
  register: computer_ldapsearch
  delegate_to: "{{ ucs_master }}"
  changed_when: false

- name: Generate client
  ansible.builtin.command:
    argv:
      - udm
      - computers/ubuntu
      - create
      - --ignore_exists
      - --position
      - "{{ ucs_computer_position }}"
      - --set
      - name={{ inventory_hostname.split('.')[0] | lower }}
      - --append
      - ip={{ ansible_default_ipv4.address }}
      - --append
      - ip={{ ansible_default_ipv6.address }}
      - --set
      - password={{ machine_secret.content | b64decode }}
  when: computer_ldapsearch.stdout | length == 0
  delegate_to: "{{ ucs_master }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Read UCS CA Cert
  ansible.builtin.slurp:
    path: /etc/univention/ssl/ucsCA/CAcert.pem
  register: ucs_ca
  delegate_to: "{{ ucs_master }}"

- name: Create UCS CA Cert
  ansible.builtin.copy:
    content: "{{ ucs_ca.content | b64decode }}"
    dest: /etc/ssl/ucsCAcert.pem
    mode: "0644"
