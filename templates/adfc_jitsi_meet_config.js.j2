/* eslint-disable no-unused-vars, no-var */

/*
 * NOTE: If you add a new option please remember to document it here:
 * https://jitsi.github.io/handbook/docs/dev-guide/dev-guide-configuration
 */

var subdir = '<!--# echo var="subdir" default="" -->';
var subdomain = '<!--# echo var="subdomain" default="" -->';

if (subdomain) {
    subdomain = subdomain.substr(0, subdomain.length - 1).split('.')
        .join('_')
        .toLowerCase() + '.';
}

// In case of no ssi provided by the webserver, use empty strings
if (subdir.startsWith('<!--')) {
    subdir = '';
}
if (subdomain.startsWith('<!--')) {
    subdomain = '';
}

var enableJaaS = false;

var config = {
    // Connection
    //

    hosts: {
        // XMPP domain.
        domain: '{{ jitsi_meet_server_name }}',

        // XMPP MUC domain. FIXME: use XEP-0030 to discover it.
        muc: 'conference.'+ subdomain + '{{ jitsi_meet_server_name }}',

        // When using authentication, domain for guest users.

        {% if jitsi_meet_authentication == 'anonymous' %}// {% endif %}anonymousdomain: 'guest.{{ jitsi_meet_server_name }}',

        // Domain for authenticated users. Defaults to <domain>.
        // authdomain: '{{ jitsi_meet_server_name }}',

        // Focus component domain. Defaults to focus.<domain>.
        // focus: 'focus.{{ jitsi_meet_server_name }}',

    },
    // BOSH URL. FIXME: use XEP-0156 to discover it.
    bosh: '//{{ jitsi_meet_server_name }}/' + subdir + 'http-bind',

    // Websocket URL
    // websocket: 'wss://test.adfc-intern.de/' + subdir + 'xmpp-websocket',

    // The real JID of focus participant - can be overridden here
    // Do not change username - FIXME: Make focus username configurable
    // https://github.com/jitsi/jitsi-meet/issues/7376
    // focusUserJid: 'focus@auth.test.adfc-intern.de',


    // Testing / experimental features.
    //

    testing: {
    {% if jitsi_meet_octo | default("no") | bool %}
        octo: {
            probability: {{  jitsi_meet_octo_probability | default("1") }}
        },
    {% else %}
        // No OCTO Configured
    {% endif %}
    },

    // Disables moderator indicators.
    // Use XEP-0215 to fetch STUN and TURN servers.
    useStunTurn: {{ jitsi_meet_use_stun_turn | bool | lower }},

    // Enable IPv6 support.
    {% if(not jitsi_meet_ipv6_enable) %}// {% endif%}useIPv6: true,

    // UI
    //


    // Require users to always specify a display name.
     requireDisplayName: true,

    // Whether to use a welcome page or not. In case it's false a random room
    // will be joined when no room is specified.
    enableWelcomePage: true,

    // Enabling the close page will ignore the welcome page redirection when
    // a call is hangup.
    enableClosePage: true,

    // Disable hiding of remote thumbnails when in a 1-on-1 conference call.
    // disable1On1Mode: false,

    // Default language for the user interface.
    defaultLanguage: '{{ jitsi_meet_lang | default('en') }}',

    // Default value for the channel "last N" attribute. -1 for unlimited.
    channelLastN: -1,

    p2p: {
        // Enables peer to peer mode. When enabled the system will try to
        // establish a direct connection when there are exactly 2 participants
        // in the room. If that succeeds the conference will stop sending data
        // through the JVB and use the peer to peer connection instead. When a
        // 3rd participant joins the conference will be moved back to the JVB
        // connection.
        enabled: {{ jitsi_meet_enable_p2p_mode | bool | lower }},

        // The STUN servers that will be used in the peer to peer connections
        stunServers: [

{% for stun_server in jitsi_meet_stun_servers %}
            { urls: 'stun:{{ stun_server }}' },
{% endfor %}

        ],

    },

    analytics: {
        //
    },

    // Information about the jitsi-meet instance we are connecting to, including
    // the user region as seen by the server.
    deploymentInfo: {
    {% if jitsi_meet_octo | default("no") |bool %}
        shard: "shard1",
        region: "{{ jitsi_meet_region | default("region1") }}",
        userRegion: "{{ jitsi_meet_region | default("region1") }}"
    {% endif %}
    },
   gravatar: {
    //     // Defaults to Gravatar.
    //     baseUrl: 'https://www.gravatar.com/avatar/',
    //     // True if Gravatar should be disabled.
       disabled: false,
   },

    localRecording: {
    //     // Whether to disable local recording or not.
         disable: true,

    //     // Whether to notify all participants when a participant is recording locally.
         notifyAllParticipants: true,

    //     // Whether to disable the self recording feature (only local participant streams).
         disableSelfRecording: true,
     },
   dynamicBrandingUrl: 'https://{{ jitsi_meet_server_name }}/static/dyn_branding.json',
    mouseMoveCallbackInterval: 1000,
    // Sets the conference subject
     //subject: 'Conference Subject',
    // noticeMessage: "Hallo Dies ist der Testbetrieb!",

    // Sets the conference local subject
    // localSubject: 'Conference Local Subject',


    // Allow all above example options to include a trailing comma and
    // prevent fear when commenting out the last value.
    makeJsonParserHappy: 'even if last key had a trailing comma'

    // no configuration value should follow this line.
    /**
     * Default interval (milliseconds) for triggering mouseMoved iframe API event
     */


};

// Set the default values for JaaS customers
if (enableJaaS) {
    config.dialInNumbersUrl = 'https://conference-mapper.jitsi.net/v1/access/dids';
    config.dialInConfCodeUrl = 'https://conference-mapper.jitsi.net/v1/access';
    config.roomPasswordNumberOfDigits = 10; // skip re-adding it (do not remove comment)
}
config.flags.sourceNameSignaling = true;
config.flags.sendMultipleVideoStreams = true;
config.flags.receiveMultipleVideoStreams = true;

config.recordingService.enabled=false;

config.fileRecordingsEnabled = false;
config.localRecording = {};
config.localRecording.disable = true;

/* eslint-enable no-unused-vars, no-var */
